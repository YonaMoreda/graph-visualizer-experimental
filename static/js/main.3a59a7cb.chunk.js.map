{"version":3,"sources":["App.js","index.js"],"names":["GraphNode","Matter","Bodies","circle","restitution","label","edge","nodeA","nodeB","Constraint","create","bodyA","bodyB","length","stiffness","render","lineWidth","App","props","state","Engine","Render","World","Mouse","MouseConstraint","engine","world","gravity","y","element","document","body","options","height","window","innerHeight","width","innerWidth","wireframes","mouse","canvas","mouseConstraint","constraint","visible","add","first","i","rest","run","className","React","Component","ReactDOM","StrictMode","getElementById"],"mappings":"4QAIMA,EACF,aACI,OADW,oBACJC,IAAOC,OAAOC,OAAO,IAAK,IAAK,GAClC,CACIC,YAAa,GACbC,MAAO,QAKjBC,EACF,WAAYC,EAAOC,GACf,OADuB,oBAChBP,IAAOQ,WAAWC,OAAO,CAC5BC,MAAOJ,EACPK,MAAOJ,EACPJ,YAAa,IACbS,OAAQ,IACRC,UAAW,IACXC,OAAQ,CAACC,UAAW,OAyFjBC,E,kDAlFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,gEAWf,IAAIC,EAASnB,IAAOmB,OAChBC,EAASpB,IAAOoB,OAChBC,EAAQrB,IAAOqB,MAEfC,EAAQtB,IAAOsB,MACfC,EAAkBvB,IAAOuB,gBAGzBC,EAASL,EAAOV,SACpBe,EAAOC,MAAMC,QAAQC,EAAI,EAGzB,IAAMb,EAASM,EAAOX,OAAO,CACzBmB,QAASC,SAASC,KAClBN,OAAQA,EACRO,QAAS,CACLC,OAAQC,OAAOC,YAAc,EAC7BC,MAAOF,OAAOG,WACdC,YAAY,KAadC,EAAQhB,EAAMb,OAAOK,EAAOyB,QAC9BC,EAAkBjB,EAAgBd,OAAOe,EAAQ,CAC7Cc,MAAOA,EACPG,WAAY,CACR5B,UAAW,GACXC,OAAQ,CACJ4B,SAAS,MAIzBrB,EAAMsB,IAAInB,EAAOC,MAAOe,GAcxB,IAAII,EAAQ,IAAI7C,EAChBsB,EAAMsB,IAAInB,EAAOC,MAAOmB,GACxB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIC,EAAO,IAAI/C,EACfsB,EAAMsB,IAAInB,EAAOC,MAAOqB,GACxBzB,EAAMsB,IAAInB,EAAOC,MAAO,IAAIpB,EAAKuC,EAAOE,IAE5C3B,EAAO4B,IAAIvB,GACXJ,EAAO2B,IAAIjC,K,+BAIX,OAAO,yBAAKkC,UAAU,Y,GAhFZC,IAAMC,WCtBxBC,IAASrC,OACP,kBAAC,IAAMsC,WAAP,KACE,kBAAC,EAAD,OAEFvB,SAASwB,eAAe,U","file":"static/js/main.3a59a7cb.chunk.js","sourcesContent":["import React from 'react';\nimport './Styles/App.css';\nimport Matter from \"matter-js\";\n\nclass GraphNode {\n    constructor() {\n        return Matter.Bodies.circle(960, 540, 30,\n            {\n                restitution: 0.5,\n                label: \"XD\"\n            });\n    }\n}\n\nclass edge {\n    constructor(nodeA, nodeB) {\n        return Matter.Constraint.create({\n            bodyA: nodeA,\n            bodyB: nodeB,\n            restitution: 0.97,\n            length: 100,\n            stiffness: 0.01,\n            render: {lineWidth: 0.5}\n        });\n    }\n}\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    //TODO:: text support https://github.com/liabru/matter-js/issues/321\n    //  ./node_modules/matter-js/src/render/render.js -> line 706\n\n    componentDidMount() {\n        // module aliases\n        let Engine = Matter.Engine,\n            Render = Matter.Render,\n            World = Matter.World,\n            // Bodies = Matter.Bodies,\n            Mouse = Matter.Mouse,\n            MouseConstraint = Matter.MouseConstraint;\n\n        // create an engine\n        let engine = Engine.create();\n        engine.world.gravity.y = 0; // turn off gravity\n\n        // create a renderer\n        const render = Render.create({\n            element: document.body,\n            engine: engine,\n            options: {\n                height: window.innerHeight - 4,\n                width: window.innerWidth,\n                wireframes: false\n            }\n        });\n\n        // create two boxes and a ground\n        // const boxA = Bodies.rectangle(400, 200, 80, 80);\n        // const boxB = Bodies.rectangle(450, 50, 80, 80);\n        // const ground = Bodies.rectangle(400, 610, 810, 60, {isStatic: true});\n        //\n        // // add all of the bodies to the world\n        // World.add(engine.world, [boxA, boxB, ground]);\n\n        // adding mouse input (constraint)\n        const mouse = Mouse.create(render.canvas),\n            mouseConstraint = MouseConstraint.create(engine, {\n                mouse: mouse,\n                constraint: {\n                    stiffness: 0.2,\n                    render: {\n                        visible: false\n                    }\n                }\n            });\n        World.add(engine.world, mouseConstraint);\n\n        //creating spring constraint\n        // const constraint = Matter.Constraint.create({\n        //     bodyA: boxA,\n        //     bodyB: boxB,\n        //     restitution: 0.97,\n        //     length: 150,\n        //     stiffness: 0.01\n        // });\n\n\n        //var GraphNode = require(\"./GraphNode\");\n        //const p = ;\n        let first = new GraphNode();\n        World.add(engine.world, first);\n        for (let i = 0; i < 10; i++) {\n            let rest = new GraphNode();\n            World.add(engine.world, rest);\n            World.add(engine.world, new edge(first, rest)); // adding edge\n        }\n        Engine.run(engine);\n        Render.run(render);\n    }\n\n    render() {\n        return <div className=\"App\"/>;\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}